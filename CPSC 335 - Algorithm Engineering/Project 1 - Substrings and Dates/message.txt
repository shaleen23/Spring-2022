std::string convert(std::string s) //helper function to convert month to int
  {
    if (s == "jan" || s == "january")
      return "01";
    if (s == "feb" || s == "february")
      return "02";
    if (s == "mar" || s == "march")
      return "03";
    if (s == "apr" || s == "april")
      return "04";
    if (s == "may"  )
      return "05";
    if (s == "jun" || s == "june")
      return "06";
    if (s == "jul" || s == "july")
      return "07";
    if (s == "aug" || s == "august")
      return "08";
    if (s == "sep" || s == "september")
      return "09";
    if (s == "oct" || s == "october")
      return "10";
    if (s == "nov" || s == "november")
      return "11";
    if (s == "dec" || s == "december")
      return "12";
    else{
      throw std::invalid_argument("Invalid input");
    }
      
      
  }
  bool valid(std::string year, std::string month, std::string day)
  {
    
      int y = stoi(year);
      int m = stoi(month);
      int d = stoi(day);

      
      if (y>=1900 && y<=2099 && m >= 1 && m <= 12 && d>=1 && d <= 31){
        return true;
      }
      return false;
  }

  std::string reformat_date(const std::string& input) {

    std::string month, year, day;
    std::string result;
    int start = 0;
    int end = 0;

    

    for(int x = 0; x<input.length(); x++){
      if(input[x]==' '){
        start++;
        end++;
      } else{
        break;
      }
    }


    while(end<input.length()){
      if(input[end]=='-'){
        if(year==""){
          year = input.substr(start, end-start);
          start = end+1;
          end++;          
        } else if(month==""){
          month = input.substr(start, end-start);
          start = end+1;
          end++;
          break;
        } else{
          day = input.substr(start, end-start);
          start = end+1;
          end++;
          
        }
      } else if(input[end]=='/'){
        if(month==""){
          month = input.substr(start, end-start);
          start = end+1;
          end++;
        } else if(day==""){
          day = input.substr(start, end-start);
          start = end+1;
          end++;
          break;
        } else{
          year = input.substr(start, end-start);
          start = end+1;
          end++;
        }
      } else if(input[end]==' ' || input[end]==','){
          if(input[end]==' '){
            std::string data = input.substr(start, end-start);
            for(int i = 0; i<data.length(); i++){
              data[i] = tolower(data[i]);
            }
            month = convert(data);
            start = end+1;
            end++;
            
          } else{
            day = input.substr(start, end-start);
            if(end+2+4<=input.length()){
              year = input.substr(end+2, 4);
            } else {
              throw std::invalid_argument("Invalid input");
            }

            for(int x = end+2+4; x<input.length(); x++){
              if(input[x]!=' '){
                throw std::invalid_argument("Invalid input");
              }
            }
            
            break;
          }
      } else{
        end++;
      }
    } 
    
    if(day==""){
      while(end< input.length() && input[end]!=' '){
        end++;
      }
      if(end-start>2){
        throw std::invalid_argument("Invalid input");
      }
      day = input.substr(start, end-start);
      
      if(day[1]==' '){
        day = input.substr(start, 1);
      }

    } else if(year==""){
      while(end< input.length() && input[end]!=' '){
        end++;
      }
      if(end-start>4){
        throw std::invalid_argument("Invalid input");
      }
      year = input.substr(start, 4);
    }

    if(valid(year, month, day)){
      if(day.length()<2){
        day = "0" + day;
      }
      if(month.length()<2){
        month = "0" + month;
      }
      result = year + "-" + month + "-" + day;
    } else{
      throw std::invalid_argument("Invalid input");
    }

    if(result == " "){
      throw std::invalid_argument("Invalid input");
    }

    return result;
  }

}